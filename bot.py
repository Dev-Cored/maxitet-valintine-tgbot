import asyncio
import logging
from aiogram import Bot, Dispatcher, types
from aiogram.filters.command import Command
from aiogram import Router, F
import sqlite3
import hashlib
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton

#from kbs import start_keyboard
from database import *

logging.basicConfig(level=logging.INFO)

init_db()

BOT_USERNAME = "maxitet_family_valentines_bot"
def gen_ref_url(user_id):
    ref_code = "ref_"+ hashlib.md5(str(user_id).encode()).hexdigest()[:8]
    return f"https://t.me/{BOT_USERNAME}?start={ref_code}"


with open('token.txt') as f:
    TOKEN = f.read().strip()

bot = Bot(token=TOKEN)
dp = Dispatcher()

menu_router = Router()
valentine_create = Router()
ref_valentine_create = Router()
reg_user = Router()



@dp.message(Command('start'))
async def start_command(message: types.Message):
    user_id = message.from_user.id
    user_name = message.from_user.username
    ref_url = gen_ref_url(user_id)

    recently_reg = reg_start_user(user_id, user_name, ref_url)

    args = message.text.split()

    if len(args) > 1:
        ref_code = args[1]
        await message.answer(f"üîó –í—ã –ø–µ—Ä–µ—à–ª–∏ –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —á—Ç–æ–±—ã –Ω–∞–ø–∏—Å–∞—Ç—å –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫—É!")
    else:
        if recently_reg:
            await message.answer("üëã –¢–µ–±—è –ø—Ä–∏–≤–µ—Ç—Å–≤—É–µ—Ç –±–æ—Ç –í–∞–ª–µ–Ω—Ç–∏–Ω–æ–∫ –æ—Ç –∫–∞–Ω–∞–ª–∞ –í –ú–∞–∫—Å–∏—Ç–µ—Ç–µ –õ—é–±—è—Ç!\n–ü—Ä–∏ –ø–æ–º–æ—â–∏ –±–æ—Ç–∞ –º–æ–∂–Ω–æ –Ω–∞ –≤—ã–±–æ—Ä, –∞–Ω–æ–Ω–∏–º–Ω–æ –∏–ª–∏ –Ω–µ—Ç, –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫—É —Ç–≤–æ–µ–π –≤—Ç–æ—Ä–æ–π –ø–æ–ª–æ–≤–∏–Ω–∫–µ –∏–ª–∏ –¥—Ä—É–≥—É/–ø–æ–¥—Ä—É–≥–µ.")
            await message.answer("üìî**–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è**\n\n–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø—Ä–æ—Å—Ç–∞ –∫–∞–∫ –º–∏—Ä:\n‚ù§Ô∏è - –ß—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫—É, –Ω—É–∂–Ω–æ –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–æ—á–∫—É `üíå–û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫—É` –∏ –∑–∞–ø–æ–ª–Ω–∏—Ç—å —Ñ–æ—Ä–º—É.\nüì© - –ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫—É, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—Å–µ–≥–æ –Ω–∞–≤—Å–µ–≥–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å /start –±–æ—Ç—É, —á—Ç–æ —Ç—ã —É–∂–µ –∏ —Å–¥–µ–ª–∞–ª")
            await message.answer("‚ÅâÔ∏è**–ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã**\n\n- **–ö–∞–∫ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫—É –¥—Ä—É–≥—É/–ø–æ–¥—Ä—É–≥–µ?**\n–ß—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –¥—Ä—É–≥—É/–ø–æ–¥—Ä—É–≥–µ –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫—É –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å –µ–≥–æ/–µ–µ —é–∑–µ—Ä–Ω–µ–π–º –≤ –¢–µ–ª–µ–≥—Ä–∞–º–µ (–Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å @), –∞ —Ç–∞–∫ –∂–µ —á—Ç–æ –±—ã –æ–Ω/–æ–Ω–∞ —Ç–∞–∫ –∂–µ —Ö–æ—Ç—è –±—ã —Ä–∞–∑ –∑–∞–ø—É—Å–∫–∞–ª(–∞) –±–æ—Ç–∞. –¢–∞–∫ –∂–µ –º–æ–∂–Ω–æ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–æ–π, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–¥–∞–µ—Ç—Å—è –∫–∞–∂–¥–æ–º—É –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞, –∞ —Ç–∞–∫ –∂–µ –µ–µ –º–æ–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É 'üîó –ú–æ—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞'\n\n- **–ß—Ç–æ –µ—Å–ª–∏ —É –º–µ–Ω—è/—É –º–æ–µ–≥–æ –¥—Ä—É–≥–∞(–ø–æ–¥—Ä—É–≥–∏) –Ω–µ—Ç—É —é–∑–µ—Ä –Ω–µ–π–º–∞?**\n–í —Ç–∞–∫–æ–º —Å–ª—É—á–∞–µ –æ—Å—Ç–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–º –∫–æ–¥–æ–º.")
            await message.answer("üí°**–°–æ–≤–µ—Ç—ã**\n- –†–∞–∑–º–µ—â–∞–π—Ç–µ —Å–≤–æ—é —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É —É —Å–µ–±—è –≤ –ø—Ä–æ—Ñ–∏–ª–µ, –≤ —Å–≤–æ–µ–º –¢–ì–ö, –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –¥–µ–ª–∏—Ç–µ—Å—å –µ–π —Å–æ —Å–≤–æ–∏–º–∏ –¥—Ä—É–∑—å—è–º–∏.\n- –ï—Å–ª–∏ –≤—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫—É –Ω–æ –∞–¥—Ä–µ—Å–∞—Ç –Ω–µ –∑–∞—à–µ–ª –≤ –±–æ—Ç–∞, —Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –≤ –ø—Ä–µ–¥–ª–æ–∂–∫—É –º–∞–∫—Å–∏—Ç–µ—Ç–∞ —Å —Å—Å—ã–ª–∫–æ–π –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –º—ã –≤–µ–∂–ª–∏–≤–æ –∏ –∞–Ω–æ–Ω–∏–º–Ω–æ –ø–æ–ø—Ä–æ—Å–∏–º –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å)")
        kb = [
            [types.KeyboardButton(text="üíå –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫—É")],
            [types.KeyboardButton(text="üîó –ú–æ—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞"),
             types.KeyboardButton(text="üìà –ú–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")]
        ]
        keyboard = types.ReplyKeyboardMarkup(
            keyboard=kb,
            resize_keyboard=True,
            input_field_placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ")
        await message.answer("–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å?", reply_markup=keyboard)
        return await menu_router.message.trigger(message)

@menu_router.message(F.text == "üîó –ú–æ—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞")
async def get_ref(message: types.Message):
    user_id = message.from_user.id
    user_ref = get_user_ref(user_id)
    await message.answer("–¢–≤–æ—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞: \nhttps://t.me/{BOT_USERNAME}?start={ref_code}")

@menu_router.message(F.Text == "üíå –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫—É")
async def send_valentine(message: types.Message):
    a = 1



async def main():
    await dp.start_polling(bot)
    await dp.include_router(menu_router)


if __name__ == "__main__":
    asyncio.run(main())
